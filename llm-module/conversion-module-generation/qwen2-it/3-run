To convert the JSON format into the desired format using Python, we can use the `json` and `geojson` libraries for parsing the JSON data and converting it to GeoJSON respectively.

Below is an example of how you could implement this functionality:

```python
import json
from geojson import FeatureCollection, Feature, Polygon

def convert_to_geojson(json_data):
    # Extracting the 'values' key from the JSON input
    boundaries = json_data.get('values', [])
    
    feature_collection = []

    for boundary in boundaries:
        geometry = []
        coords = [[
            (point['lon'], point['lat']) 
            for point in polygon['rings'][0]['points']
        ] for polygon in boundary['multipolygons']]

        if coords:
            geometry.append(Polygon(coords))
        
        feature_properties = {
            'name': boundary.get('name', ''),
            'type': boundary.get('@type', '').split()[-1],  # type: Field
            'source': boundary.get('sourceType', ''),      
            'date': boundary.get('createdTime', '').replace('+00:00', '')  # Convert ISO format to Unix timestamp 
        }

        feature_collection.append(Feature(
            geometry=geometry[0] if geometry else None,
            properties=feature_properties
        ))

    return FeatureCollection(feature_collection)

# Example usage
json_data = {
    "type": "FeatureCollection",
    "features": [
        {
            "type": "Feature",
            "properties": {
                "name": "ArablebleArea"
            },
            "geometry": {
                "type": "Polygon",
                "coordinates": [
                    [
                        [10.460348, 51.120577],
                        [10.460492, 51.120627],
                        [10.460969, 51.120139],
                        [10.460819, 51.120081],
                        [10.460348, 51.120577]
                    ]
                ]
            }
        }
    ]
}

geojson_data = convert_to_geojson(json_data)
print(geojson_data)
```

This example assumes that the structure of the input JSON data is already as specified in your question.

Remember to handle edge cases and unexpected input by adding appropriate error handling.