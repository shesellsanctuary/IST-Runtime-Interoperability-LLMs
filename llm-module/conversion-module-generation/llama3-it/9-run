Here is a Python module that converts the given JSON format to the desired schema:
```python
import json
from shapely.geometry import Polygon

def convert_json_to_schema(json_data):
    features = []
    for value in json_data["values"]:
        feature = {
            "type": "Feature",
            "properties": {
                "name": value["name"],
                "type": "Feldweg",
                "source": "Rawdata",
                "date": value["createdTime"]
            },
            "geometry": {
                "type": "Polygon",
                "coordinates": []
            }
        }

        # Extract polygon coordinates from multipolygons
        for multipolygon in value["multipolygons"]:
            for ring in multipolygon["rings"]:
                points = [(point["lon"], point["lat"]) for point in ring["points"]]
                feature["geometry"]["coordinates"].append(points)

        features.append(feature)

    return {
        "type": "FeatureCollection",
        "features": features
    }

def main():
    with open("input.json") as f:
        json_data = json.load(f)

    schema = convert_json_to_schema(json_data)
    print(json.dumps(schema, indent=4))

if __name__ == "__main__":
    main()
```
Here's how the code works:

1. The `convert_json_to_schema` function takes in the JSON data as input and returns a new JSON object in the desired schema.
2. It iterates through each boundary (value) in the input JSON, extracts the relevant information (name, type, source, date), and creates a new feature dictionary with these properties.
3. For each polygon in the multipolygons, it extracts the coordinates from the points and adds them to the feature's geometry coordinate list.
4. The `main` function reads the input JSON file, calls the conversion function, and prints the resulting schema as JSON.

Note that this code assumes that the input JSON file is named "input.json" and is located in the same directory as the Python script. You can modify the file path or name to match your specific setup.